@page "/todo"
@using ToDoList.Shared
@using ToDoList.Client.Components
@inject IJSRuntime JSRuntime

<style>
    #container {
        width: 80%;
        margin:auto;
    }

    .item{
        background: rgb(135, 199, 135);
        width: 200px;
        height:auto !important;
    }

</style>

<div @onclick="AddCard">
    <div class="col-md-4" style="margin:0 auto;" @onkeyup="@(e => AddCard(e))">
        <div class="card">
            <div class="card-container">
                <div class="card-header">
                    @if (!string.IsNullOrEmpty(tempCard.Title))
                    {
                        <h3>@tempCard.Title</h3>
                    }
                </div>
                <div class="card-body">
                    <ul style="list-style: none;">
                        @if (tempCard.Items != null)
                        {
                            @foreach (var item in tempCard.Items)
                            {
                                <li>
                                    <input type="checkbox" @bind="item.IsDone" />
                                    @if (item.IsDone)
                                    {
                                        <del>@item.Task</del>
                                    }
                                    else
                                    {
                                        @item.Task
                                    }
                                </li>
                            }
                        }
                    </ul>
                </div>
                @if (string.IsNullOrEmpty(tempCard.Title))
                {
                    <input style="width:100%;" placeholder="Title" @bind="newTodo" @onkeyup="@(e => AddItem(e))" @onclick:stopPropagation="true" />
                }
                else
                {
                    <input style="width:100%;" placeholder="I will do this...." @bind="newTodo" @onkeyup="@(e => AddItem(e))" @onclick:stopPropagation="true" />
                }
            </div>
        </div>
    </div>

    @*Card Component*@
    <div id="container">
        @foreach (var card in cardLst)
        {
            <ToDoCard card="@card" />
        }
    </div>
    @*End*@
</div>

@code{
    //Temp Card
    private TodoCardModel tempCard = new TodoCardModel();
    public string cardTitle { get; set; }
    private string newTodo { get; set; }
    //end

    private List<TodoCardModel> cardLst = new List<TodoCardModel>();
    private List<TodoItemModel> itemLst = new List<TodoItemModel>();

    private void AddItem(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            if (string.IsNullOrEmpty(tempCard.Title))
            {
                tempCard.Title = newTodo;
            }
            else
            {
                tempCard.Items.Add(new TodoItemModel() { Task = newTodo });
            }
            newTodo = null;
        }
    }

    private void AddCard(KeyboardEventArgs e)
    {
        if (e.Key == "Escape")
        {
            if (!string.IsNullOrWhiteSpace(tempCard.Title))
            {
                cardLst.Add(new TodoCardModel() { Title = tempCard.Title, Items = tempCard.Items });
                // reset tempCard
                tempCard.Title = string.Empty;
                tempCard.Items = new List<TodoItemModel>();
            }
        }
    }

    private void AddCard(MouseEventArgs m)
    {
        if (!string.IsNullOrWhiteSpace(tempCard.Title))
        {
            cardLst.Add(new TodoCardModel() { Title = tempCard.Title, Items = tempCard.Items });
            // reset tempCard
            tempCard.Title = string.Empty;
            tempCard.Items = new List<TodoItemModel>();
        }
    }
}


